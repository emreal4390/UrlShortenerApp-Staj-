@{
    ViewData["Title"] = "Şifre Sıfırlama";
}

<div id="root"></div>

@section Scripts {
    <script src="https://unpkg.com/react@17/umd/react.development.js"></script>
    <script src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>
    <script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>
    
    <script type="text/babel">
        const ResetPassword = () => {
            const [password, setPassword] = React.useState('');
            const [confirmPassword, setConfirmPassword] = React.useState('');
            const [message, setMessage] = React.useState('');
            const [isLoading, setIsLoading] = React.useState(false);

            // URL'den token'ı al
            const urlParams = new URLSearchParams(window.location.search);
            const token = urlParams.get('token');

            const handleSubmit = async (e) => {
                e.preventDefault();
                
                if (password !== confirmPassword) {
                    setMessage('Şifreler eşleşmiyor');
                    return;
                }

                if (password.length < 6) {
                    setMessage('Şifre en az 6 karakter olmalıdır');
                    return;
                }

                setIsLoading(true);
                
                try {
                    const response = await fetch('/api/auth/reset-password', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ token, newPassword: password })
                    });
                    
                    const data = await response.json();
                    setMessage(data.message);
                    
                    if (response.ok) {
                        // Başarılı ise 3 saniye sonra login sayfasına yönlendir
                        setTimeout(() => {
                            window.location.href = '/Auth/Login';
                        }, 3000);
                    }
                } catch (error) {
                    setMessage('Bir hata oluştu. Lütfen daha sonra tekrar deneyin.');
                    console.error('Error:', error);
                } finally {
                    setIsLoading(false);
                }
            };

            return (
                <div className="container mt-5">
                    <div className="row justify-content-center">
                        <div className="col-md-6">
                            <div className="card">
                                <div className="card-body">
                                    <h2 className="card-title text-center mb-4">Yeni Şifre Belirleme</h2>
                                    
                                    {message && (
                                        <div className={`alert ${message.includes('hata') ? 'alert-danger' : 'alert-info'}`} role="alert">
                                            {message}
                                        </div>
                                    )}
                                    
                                    <form onSubmit={handleSubmit}>
                                        <div className="form-group mb-3">
                                            <label htmlFor="password">Yeni Şifre</label>
                                            <input
                                                type="password"
                                                className="form-control"
                                                id="password"
                                                value={password}
                                                onChange={(e) => setPassword(e.target.value)}
                                                required
                                                minLength="6"
                                                disabled={isLoading}
                                            />
                                        </div>

                                        <div className="form-group mb-3">
                                            <label htmlFor="confirmPassword">Şifre Tekrar</label>
                                            <input
                                                type="password"
                                                className="form-control"
                                                id="confirmPassword"
                                                value={confirmPassword}
                                                onChange={(e) => setConfirmPassword(e.target.value)}
                                                required
                                                minLength="6"
                                                disabled={isLoading}
                                            />
                                        </div>
                                        
                                        <button 
                                            type="submit" 
                                            className="btn btn-primary w-100"
                                            disabled={isLoading}
                                        >
                                            {isLoading ? 'İşleniyor...' : 'Şifreyi Güncelle'}
                                        </button>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            );
        };

        ReactDOM.render(<ResetPassword />, document.getElementById('root'));
    </script>
} 